{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/web/src/graphql/mutations/post.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/web/src/graphql/mutations/post.ts","mtime":1637788880653},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport { gql } from '@apollo/client';\nexport var CREATE_POST = gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  mutation createPost($postData: PostInput, $image: Upload!) {\\n    createPost(postData: $postData, image: $image) {\\n      id\\n    }\\n  }\\n\"], [\"\\n  mutation createPost($postData: PostInput, $image: Upload!) {\\n    createPost(postData: $postData, image: $image) {\\n      id\\n    }\\n  }\\n\"])));\nexport var SEND_COMMENT = gql(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  mutation commentPost($postId: String, $text: String) {\\n    commentPost(postId: $postId, text: $text)\\n  }\\n\"], [\"\\n  mutation commentPost($postId: String, $text: String) {\\n    commentPost(postId: $postId, text: $text)\\n  }\\n\"])));\nexport var LIKE_POST = gql(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  mutation likePost($postId: String, $isLiked: Boolean) {\\n    likePost(postId: $postId, isLiked: $isLiked)\\n  }\\n\"], [\"\\n  mutation likePost($postId: String, $isLiked: Boolean) {\\n    likePost(postId: $postId, isLiked: $isLiked)\\n  }\\n\"])));\nexport var SEND_COMMENT_IMMIDIATE_UPDATE = gql(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  mutation commentPostImmidiateUpdate($postId: String, $text: String) {\\n    commentPostImmidiateUpdate(postId: $postId, text: $text) {\\n      id\\n      description\\n      lazyComments {\\n        id\\n        comment\\n      }\\n    }\\n  }\\n\"], [\"\\n  mutation commentPostImmidiateUpdate($postId: String, $text: String) {\\n    commentPostImmidiateUpdate(postId: $postId, text: $text) {\\n      id\\n      description\\n      lazyComments {\\n        id\\n        comment\\n      }\\n    }\\n  }\\n\"])));\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4;\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/web/src/graphql/mutations/post.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/web/src/graphql/mutations/post.ts"],"names":[],"mappings":";;;;AAAA,OAAO,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAErC,MAAM,CAAC,IAAM,WAAW,GAAG,GAAG,mNAAA,gJAM7B,IAAA,CAAC;AAEF,MAAM,CAAC,IAAM,YAAY,GAAG,GAAG,qLAAA,kHAI9B,IAAA,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,GAAG,yLAAA,sHAI3B,IAAA,CAAC;AAEF,MAAM,CAAC,IAAM,6BAA6B,GAAG,GAAG,qTAAA,kPAW/C,IAAA,CAAC","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const CREATE_POST = gql`\n  mutation createPost($postData: PostInput, $image: Upload!) {\n    createPost(postData: $postData, image: $image) {\n      id\n    }\n  }\n`;\n\nexport const SEND_COMMENT = gql`\n  mutation commentPost($postId: String, $text: String) {\n    commentPost(postId: $postId, text: $text)\n  }\n`;\n\nexport const LIKE_POST = gql`\n  mutation likePost($postId: String, $isLiked: Boolean) {\n    likePost(postId: $postId, isLiked: $isLiked)\n  }\n`;\n\nexport const SEND_COMMENT_IMMIDIATE_UPDATE = gql`\n  mutation commentPostImmidiateUpdate($postId: String, $text: String) {\n    commentPostImmidiateUpdate(postId: $postId, text: $text) {\n      id\n      description\n      lazyComments {\n        id\n        comment\n      }\n    }\n  }\n`;\n"]}]}