{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/server/src/services/user.service.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/server/src/services/user.service.ts","mtime":1637768107009},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport * as bcrypt from 'bcryptjs';\nimport { UserModel } from '../db/user';\nvar UserService = (function () {\n    function UserService() {\n    }\n    UserService.prototype.findUser = function (id) {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, UserModel.findById(id)];\n            });\n        });\n    };\n    UserService.prototype.findUsers = function () {\n        return __awaiter(this, void 0, Promise, function () {\n            return __generator(this, function (_a) {\n                return [2, UserModel.find({})];\n            });\n        });\n    };\n    UserService.prototype.createUser = function (userData) {\n        return __awaiter(this, void 0, Promise, function () {\n            var e_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        userData.password = bcrypt.hashSync(userData.password);\n                        return [4, UserModel.create(userData)];\n                    case 1: return [2, _a.sent()];\n                    case 2:\n                        e_1 = _a.sent();\n                        console.log(e_1);\n                        return [2, null];\n                    case 3: return [2];\n                }\n            });\n        });\n    };\n    return UserService;\n}());\nexport { UserService };\nexport var userService = new UserService();\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/server/src/services/user.service.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/server/src/services/user.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,MAAM,MAAM,UAAU,CAAC;AACnC,OAAO,EAAQ,SAAS,EAAE,MAAM,YAAY,CAAC;AAQ7C;IAAA;IAkBA,CAAC;IAjBc,8BAAQ,GAArB,UAAsB,EAAU;uCAAG,OAAO;;gBACxC,WAAO,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAC;;;KAC/B;IAEY,+BAAS,GAAtB;uCAA0B,OAAO;;gBAC/B,WAAO,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC;;;KAC3B;IAEY,gCAAU,GAAvB,UAAwB,QAAc;uCAAG,OAAO;;;;;;wBAE5C,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAChD,WAAM,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAA;4BAAvC,WAAO,SAAgC,EAAC;;;wBAExC,OAAO,CAAC,GAAG,CAAC,GAAC,CAAC,CAAC;wBACf,WAAO,IAAI,EAAC;;;;;KAEf;IACH,kBAAC;AAAD,CAAC,AAlBD,IAkBC;;AAED,MAAM,CAAC,IAAM,WAAW,GAAG,IAAI,WAAW,EAAE,CAAC","sourcesContent":["import * as bcrypt from 'bcryptjs';\nimport { User, UserModel } from '../db/user';\n\ninterface BaseUserOperations {\n  findUser(id: string): Promise<User>;\n  findUsers(): Promise<User[]>;\n  createUser(userData: User): Promise<User | null>;\n}\n\nexport class UserService implements BaseUserOperations {\n  public async findUser(id: string): Promise<User> {\n    return UserModel.findById(id);\n  }\n\n  public async findUsers(): Promise<User[]> {\n    return UserModel.find({});\n  }\n\n  public async createUser(userData: User): Promise<User | null> {\n    try {\n      userData.password = bcrypt.hashSync(userData.password);\n      return await UserModel.create(userData);\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n}\n\nexport const userService = new UserService();\n"]}]}