{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/server/src/db/user.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/server/src/db/user.ts","mtime":1637521287803},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["import * as mongoose from 'mongoose';\nimport { Schema } from 'mongoose';\nvar UserSchema = new Schema({\n    name: { type: Schema.Types.String, required: true },\n    email: { type: Schema.Types.String, required: true },\n    password: { type: Schema.Types.String, required: true },\n    isDeleted: { type: Schema.Types.Boolean }\n}, {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n});\nexport var UserModel = mongoose.model('User', UserSchema);\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/server/src/db/user.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/server/src/db/user.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAY,MAAM,EAAE,MAAM,UAAU,CAAC;AAS5C,IAAM,UAAU,GAAW,IAAI,MAAM,CACnC;IACE,IAAI,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACnD,KAAK,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACpD,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE;CAC1C,EACD;IACE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1B,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC7B,CACF,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAO,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import * as mongoose from 'mongoose';\nimport { Document, Schema } from 'mongoose';\n\nexport interface User extends Document {\n  name: string;\n  email: string;\n  password: string;\n  isDeleted: boolean;\n}\n\nconst UserSchema: Schema = new Schema(\n  {\n    name: { type: Schema.Types.String, required: true },\n    email: { type: Schema.Types.String, required: true },\n    password: { type: Schema.Types.String, required: true },\n    isDeleted: { type: Schema.Types.Boolean }\n  },\n  {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\nexport const UserModel = mongoose.model<User>('User', UserSchema);\n"]}]}