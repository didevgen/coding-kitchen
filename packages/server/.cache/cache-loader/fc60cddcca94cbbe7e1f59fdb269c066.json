{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/server/src/db/post.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/server/src/db/post.ts","mtime":1637611892027},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["import * as mongoose from 'mongoose';\nimport { Schema } from 'mongoose';\nvar PostSchema = new Schema({\n    description: { type: Schema.Types.String, required: true },\n    imageUrl: { type: Schema.Types.String, required: true },\n    likes: [\n        {\n            type: Schema.Types.ObjectId,\n            ref: 'User',\n            default: function () {\n                return [];\n            }\n        }\n    ],\n    author: {\n        type: Schema.Types.ObjectId,\n        ref: 'User'\n    },\n    comments: [\n        {\n            type: Schema.Types.ObjectId,\n            ref: 'Comment',\n            default: function () {\n                return [];\n            }\n        }\n    ],\n    isDeleted: { type: Schema.Types.Boolean }\n}, {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n});\nexport var PostModel = mongoose.model('Post', PostSchema);\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/server/src/db/post.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/server/src/db/post.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,QAAQ,MAAM,UAAU,CAAC;AACrC,OAAO,EAAY,MAAM,EAAE,MAAM,UAAU,CAAC;AAY5C,IAAM,UAAU,GAAW,IAAI,MAAM,CACnC;IACE,WAAW,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1D,QAAQ,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE;IACvD,KAAK,EAAE;QACL;YACE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,MAAM;YACX,OAAO,EAAE;gBACP,OAAO,EAAE,CAAC;YACZ,CAAC;SACF;KACF;IACD,MAAM,EAAE;QACN,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;QAC3B,GAAG,EAAE,MAAM;KACZ;IACD,QAAQ,EAAE;QACR;YACE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,QAAQ;YAC3B,GAAG,EAAE,SAAS;YACd,OAAO,EAAE;gBACP,OAAO,EAAE,CAAC;YACZ,CAAC;SACF;KACF;IACD,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,EAAE;CAC1C,EACD;IACE,MAAM,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;IAC1B,QAAQ,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE;CAC7B,CACF,CAAC;AAEF,MAAM,CAAC,IAAM,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAO,MAAM,EAAE,UAAU,CAAC,CAAC","sourcesContent":["import * as mongoose from 'mongoose';\nimport { Document, Schema } from 'mongoose';\nimport { User } from './user';\n\nexport interface Post extends Document {\n  description: string;\n  imageUrl: string;\n  likes: User[];\n  comments: Comment[];\n  author: User;\n  isDeleted: boolean;\n}\n\nconst PostSchema: Schema = new Schema(\n  {\n    description: { type: Schema.Types.String, required: true },\n    imageUrl: { type: Schema.Types.String, required: true },\n    likes: [\n      {\n        type: Schema.Types.ObjectId,\n        ref: 'User',\n        default: () => {\n          return [];\n        }\n      }\n    ],\n    author: {\n      type: Schema.Types.ObjectId,\n      ref: 'User'\n    },\n    comments: [\n      {\n        type: Schema.Types.ObjectId,\n        ref: 'Comment',\n        default: () => {\n          return [];\n        }\n      }\n    ],\n    isDeleted: { type: Schema.Types.Boolean }\n  },\n  {\n    toJSON: { virtuals: true },\n    toObject: { virtuals: true }\n  }\n);\n\nexport const PostModel = mongoose.model<Post>('Post', PostSchema);\n"]}]}