{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/server/src/resolvers/mutations/post.mutation.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/server/src/resolvers/mutations/post.mutation.ts","mtime":1637788765215},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { PostModel } from '../../db/post';\nimport { postService } from '../../services/post.service';\nexport var postMutations = {\n    createPost: function (obj, _a, _b) {\n        var postData = _a.postData, image = _a.image;\n        var currentUser = _b.currentUser;\n        return __awaiter(this, void 0, void 0, function () {\n            var _c, _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        _d = (_c = postService).createPost;\n                        _e = [postData];\n                        return [4, image];\n                    case 1: return [2, _d.apply(_c, _e.concat([_f.sent(), currentUser.id]))];\n                }\n            });\n        });\n    },\n    deletePost: function (_, _a) {\n        var id = _a.id;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0: return [4, PostModel.findOneAndUpdate({\n                            _id: id,\n                            isDeleted: false\n                        }, {\n                            $set: {\n                                isDeleted: true\n                            }\n                        })];\n                    case 1:\n                        _b.sent();\n                        return [2, true];\n                }\n            });\n        });\n    },\n    commentPost: function (obj, _a, _b) {\n        var postId = _a.postId, text = _a.text;\n        var currentUser = _b.currentUser;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4, postService.commentPost(postId, text, currentUser.id)];\n                    case 1:\n                        _c.sent();\n                        return [2, true];\n                }\n            });\n        });\n    },\n    commentPostImmidiateUpdate: function (obj, _a, _b) {\n        var postId = _a.postId, text = _a.text;\n        var currentUser = _b.currentUser;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4, postService.commentPost(postId, text, currentUser.id)];\n                    case 1:\n                        _c.sent();\n                        return [2, postService.findPost(postId)];\n                }\n            });\n        });\n    },\n    likePost: function (_, _a, _b) {\n        var postId = _a.postId, isLiked = _a.isLiked;\n        var currentUser = _b.currentUser;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0: return [4, postService.likePost(postId, currentUser.id, isLiked)];\n                    case 1:\n                        _c.sent();\n                        return [2];\n                }\n            });\n        });\n    }\n};\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/server/src/resolvers/mutations/post.mutation.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/server/src/resolvers/mutations/post.mutation.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAE1C,OAAO,EAAa,WAAW,EAAE,MAAM,6BAA6B,CAAC;AAErE,MAAM,CAAC,IAAM,aAAa,GAAG;IACrB,UAAU,EAAhB,UACE,GAAQ,EACR,EAA0E,EAC1E,EAAe;YADb,QAAQ,cAAA,EAAE,KAAK,WAAA;YACf,WAAW,iBAAA;;;;;;wBAEN,KAAA,CAAA,KAAA,WAAW,CAAA,CAAC,UAAU,CAAA;8BAAC,QAAQ;wBAAE,WAAM,KAAK,EAAA;4BAAnD,WAAO,wBAAiC,SAAW,EAAE,WAAW,CAAC,EAAE,GAAC,EAAC;;;;KACtE;IACK,UAAU,YAAC,CAAC,EAAE,EAAM;YAAJ,EAAE,QAAA;;;;4BACtB,WAAM,SAAS,CAAC,gBAAgB,CAC9B;4BACE,GAAG,EAAE,EAAE;4BACP,SAAS,EAAE,KAAK;yBACjB,EACD;4BACE,IAAI,EAAE;gCACJ,SAAS,EAAE,IAAI;6BAChB;yBACF,CACF,EAAA;;wBAVD,SAUC,CAAC;wBACF,WAAO,IAAI,EAAC;;;;KACb;IACK,WAAW,EAAjB,UAAkB,GAAQ,EAAE,EAAkD,EAAE,EAAe;YAAjE,MAAM,YAAA,EAAE,IAAI,UAAA;YAAwC,WAAW,iBAAA;;;;4BAC3F,WAAM,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC,EAAA;;wBAA3D,SAA2D,CAAC;wBAC5D,WAAO,IAAI,EAAC;;;;KACb;IACK,0BAA0B,EAAhC,UAAiC,GAAQ,EAAE,EAAkD,EAAE,EAAe;YAAjE,MAAM,YAAA,EAAE,IAAI,UAAA;YAAwC,WAAW,iBAAA;;;;4BAC1G,WAAM,WAAW,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,EAAE,WAAW,CAAC,EAAE,CAAC,EAAA;;wBAA3D,SAA2D,CAAC;wBAC5D,WAAO,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC;;;;KACrC;IACK,QAAQ,YAAC,CAAC,EAAE,EAAmB,EAAE,EAAe;YAAlC,MAAM,YAAA,EAAE,OAAO,aAAA;YAAM,WAAW,iBAAA;;;;4BAClD,WAAM,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,WAAW,CAAC,EAAE,EAAE,OAAO,CAAC,EAAA;;wBAA3D,SAA2D,CAAC;;;;;KAC7D;CACF,CAAC","sourcesContent":["import { PostModel } from '../../db/post';\nimport { UploadedFile } from '../../services/imageService';\nimport { PostInput, postService } from '../../services/post.service';\n\nexport const postMutations = {\n  async createPost(\n    obj: any,\n    { postData, image }: { postData: PostInput; image: Promise<UploadedFile> },\n    { currentUser }\n  ) {\n    return postService.createPost(postData, await image, currentUser.id);\n  },\n  async deletePost(_, { id }) {\n    await PostModel.findOneAndUpdate(\n      {\n        _id: id,\n        isDeleted: false\n      },\n      {\n        $set: {\n          isDeleted: true\n        }\n      }\n    );\n    return true;\n  },\n  async commentPost(obj: any, { postId, text }: { postId: string; text: string }, { currentUser }) {\n    await postService.commentPost(postId, text, currentUser.id);\n    return true;\n  },\n  async commentPostImmidiateUpdate(obj: any, { postId, text }: { postId: string; text: string }, { currentUser }) {\n    await postService.commentPost(postId, text, currentUser.id);\n    return postService.findPost(postId);\n  },\n  async likePost(_, { postId, isLiked }, { currentUser }) {\n    await postService.likePost(postId, currentUser.id, isLiked);\n  }\n};\n"]}]}