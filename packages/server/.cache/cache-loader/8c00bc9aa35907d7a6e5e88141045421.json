{"remainingRequest":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js??ref--16-1!/Users/ykova/mine/coding-kitchen/packages/server/src/services/imageService.ts","dependencies":[{"path":"/Users/ykova/mine/coding-kitchen/packages/server/src/services/imageService.ts","mtime":1637614888137},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/cache-loader/dist/cjs.js","mtime":1637425226491},{"path":"/Users/ykova/mine/coding-kitchen/node_modules/ts-loader/index.js","mtime":1637425227303}],"contextDependencies":[],"result":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport * as fs from 'fs';\nimport * as os from 'os';\nimport { uuid } from 'uuidv4';\nvar ImageService = (function () {\n    function ImageService(uploader) {\n        this.uploader = uploader;\n    }\n    ImageService.prototype.getFileUrl = function (newFileName) {\n        return os.tmpdir() + \"/\" + newFileName;\n    };\n    ImageService.prototype.getFileExtension = function (fileName) {\n        return fileName.split('.').pop();\n    };\n    ImageService.prototype.saveImageFile = function (file) {\n        return __awaiter(this, void 0, Promise, function () {\n            var imageUuid, newFileName, fileUrl, writeStream, fileStream, pipedStream;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        imageUuid = uuid();\n                        newFileName = imageUuid + \".\" + this.getFileExtension(file.filename);\n                        fileUrl = this.getFileUrl(newFileName);\n                        writeStream = fs.createWriteStream(fileUrl);\n                        fileStream = file.createReadStream();\n                        pipedStream = fileStream.pipe(writeStream);\n                        return [4, new Promise(function (resolve, reject) {\n                                pipedStream.on('finish', function () {\n                                    resolve();\n                                });\n                                pipedStream.on('error', function (e) {\n                                    console.error(e);\n                                });\n                            })];\n                    case 1:\n                        _a.sent();\n                        return [2, [fileUrl, imageUuid, newFileName]];\n                }\n            });\n        });\n    };\n    return ImageService;\n}());\nexport { ImageService };\n",{"version":3,"file":"/Users/ykova/mine/coding-kitchen/packages/server/src/services/imageService.ts","sourceRoot":"","sources":["/Users/ykova/mine/coding-kitchen/packages/server/src/services/imageService.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,MAAM,IAAI,CAAC;AACzB,OAAO,KAAK,EAAE,MAAM,IAAI,CAAC;AAEzB,OAAO,EAAE,IAAI,EAAE,MAAM,QAAQ,CAAC;AAkB9B;IACE,sBAAsB,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;IAAG,CAAC;IAKvC,iCAAU,GAAjB,UAAkB,WAAmB;QACnC,OAAU,EAAE,CAAC,MAAM,EAAE,SAAI,WAAa,CAAC;IACzC,CAAC;IAEM,uCAAgB,GAAvB,UAAwB,QAAgB;QACtC,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;IACnC,CAAC;IAEY,oCAAa,GAA1B,UAA2B,IAAkB;uCAAG,OAAO;;;;;wBAC/C,SAAS,GAAG,IAAI,EAAE,CAAC;wBACnB,WAAW,GAAM,SAAS,SAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAG,CAAC;wBACrE,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;wBACvC,WAAW,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;wBAC5C,UAAU,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACrC,WAAW,GAAG,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;wBACjD,WAAM,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;gCACtC,WAAW,CAAC,EAAE,CAAC,QAAQ,EAAE;oCACvB,OAAO,EAAE,CAAC;gCACZ,CAAC,CAAC,CAAC;gCAEH,WAAW,CAAC,EAAE,CAAC,OAAO,EAAE,UAAA,CAAC;oCACvB,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gCACnB,CAAC,CAAC,CAAC;4BACL,CAAC,CAAC,EAAA;;wBARF,SAQE,CAAC;wBACH,WAAO,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC,EAAC;;;;KAC1C;IACH,mBAAC;AAAD,CAAC,AAhCD,IAgCC","sourcesContent":["import * as fs from 'fs';\nimport * as os from 'os';\nimport { Readable } from 'stream';\nimport { uuid } from 'uuidv4';\nimport { Uploadable } from '../aws/s3ImageUploader';\n\nexport interface UploadedFile {\n  filename: string;\n  createReadStream(): Readable;\n}\n\nexport interface ImageOperations {\n  addImage(file): Promise<string>;\n  removeImage(imageUuid: string): Promise<void>;\n}\n\nexport interface DataImageService {\n  uploadImage(imageUuid: string, downloadUrl: string, previewUrl?: string): Promise<void>;\n  removeImage(imageUuid: string): Promise<void>;\n}\n\nexport abstract class ImageService implements ImageOperations {\n  constructor(protected uploader: Uploadable) {}\n  public abstract addImage(file): Promise<string>;\n\n  public abstract removeImage(imageUuid: string): Promise<void>;\n\n  public getFileUrl(newFileName: string): string {\n    return `${os.tmpdir()}/${newFileName}`;\n  }\n\n  public getFileExtension(fileName: string): string {\n    return fileName.split('.').pop();\n  }\n\n  public async saveImageFile(file: UploadedFile): Promise<string[]> {\n    const imageUuid = uuid();\n    const newFileName = `${imageUuid}.${this.getFileExtension(file.filename)}`;\n    const fileUrl = this.getFileUrl(newFileName);\n    const writeStream = fs.createWriteStream(fileUrl);\n    const fileStream = file.createReadStream();\n    const pipedStream = fileStream.pipe(writeStream);\n    await new Promise<void>((resolve, reject) => {\n      pipedStream.on('finish', () => {\n        resolve();\n      });\n\n      pipedStream.on('error', e => {\n        console.error(e);\n      });\n    });\n    return [fileUrl, imageUuid, newFileName];\n  }\n}\n"]}]}